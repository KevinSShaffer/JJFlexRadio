Comparing files Flex6300Filters.cs and FLEX6300FILTERS FROM 3.1.12.8.CS
***** Flex6300Filters.cs
                {
                    if (FlexBase.await(() =>
                    {
***** FLEX6300FILTERS FROM 3.1.12.8.CS
                {
                    FlexBase.await(() =>
                    {
*****

***** Flex6300Filters.cs
                        return (panadapter != null);
                    }, 2000))
                    {
                        panadapter.Width = (brailleWidth * brailleScaleup) + brailleWidth;
                        panadapter.Height = 700;
                        panadapter.FPS = fps;
                        panadapter.CenterFreq = rig.LongFreqToLibFreq(segment.Low + (ulong)(width / 2));
                        waterfall.CenterFreq = rig.LongFreqToLibFreq(segment.Low + (ulong)(width / 2));
                        panadapter.Bandwidth = rig.LongFreqToLibFreq((ulong)width + stepSize);
                        waterfall.Bandwidth = rig.LongFreqToLibFreq((ulong)width + stepSize);
                        panadapter.LowDbm = lowDBM;
                        panadapter.HighDbm = highDBM;
                    }
                    else
                    {
                        Tracing.TraceLine("panParameterSetup:no panadapter", TraceLevel.Error);
                    }
                }), "PanParameterSetup");
                // Let other setup complete.
***** FLEX6300FILTERS FROM 3.1.12.8.CS
                        return (panadapter != null);
                    }, 2000);

                    panadapter.Width = (brailleWidth * brailleScaleup) + brailleWidth;
                    panadapter.Height = 700;
                    panadapter.FPS = fps;
                    panadapter.CenterFreq = rig.LongFreqToLibFreq(segment.Low + (ulong)(width / 2));
                    waterfall.CenterFreq = rig.LongFreqToLibFreq(segment.Low + (ulong)(width / 2));
                    panadapter.Bandwidth = rig.LongFreqToLibFreq((ulong)width + stepSize);
                    waterfall.Bandwidth = rig.LongFreqToLibFreq((ulong)width + stepSize);
                    panadapter.LowDbm = lowDBM;
                    panadapter.HighDbm = highDBM;
                }), "PanParameterSetup");
                flexPan = new FlexWaterfall(rig, segment.Low, segment.High, rig.Callouts.BrailleCells);
                // Let other setup complete.
*****

***** Flex6300Filters.cs
                {
                    if (panadapter != null)
                    {
                        flexPan = new FlexWaterfall(rig, segment.Low, segment.High, rig.Callouts.BrailleCells);
                        panadapter.DataReady += panDataHandler;
                        waterfall.DataReady += waterfallDataHandler;
                    }
                    else
                    {
                        Tracing.TraceLine("panParameterSetup:no panadapter", TraceLevel.Error);
                    }
                }));
***** FLEX6300FILTERS FROM 3.1.12.8.CS
                {
                    panadapter.DataReady += panDataHandler;
                    waterfall.DataReady += waterfallDataHandler;
                }));
*****

***** Flex6300Filters.cs
                {
                    int i;
                    for (i = 0; i < data.Length; i++)
                    {
***** FLEX6300FILTERS FROM 3.1.12.8.CS
                {
                    for (int i = 0; i < data.Length; i++)
                    {
*****

***** Flex6300Filters.cs
                            oldPanData = data;
                            break;
***** FLEX6300FILTERS FROM 3.1.12.8.CS
                            oldPanData = data;
                            diff = true;
                            break;
*****

***** Flex6300Filters.cs
                    }
                    diff = (i < data.Length);
                }
                if (!diff)
                {
                    Tracing.TraceLine("panDataHandler:no change", TraceLevel.Info);
                }
***** FLEX6300FILTERS FROM 3.1.12.8.CS
                    }
                }
*****

***** Flex6300Filters.cs
                pos = currentPanData.FreqToCell(theRadio.ActiveSlice.Freq);
                // save this position.
***** FLEX6300FILTERS FROM 3.1.12.8.CS
                pos = currentPanData.FreqToCell(theRadio.ActiveSlice.Freq);
                Tracing.TraceLine("PanBox_Enter:" + pos, TraceLevel.Info);
                // save this position.
*****

***** Flex6300Filters.cs
            }
            Tracing.TraceLine("PanBox_Enter:" + pos, TraceLevel.Info);
            if (pos < PanBox.Text.Length)
***** FLEX6300FILTERS FROM 3.1.12.8.CS
            }
            if (pos < PanBox.Text.Length)
*****

***** Flex6300Filters.cs
            // Start looking for a cursor position change.
            panTimer = new System.Threading.Timer(panTimerHandler, null, panTimerInitialDelay, panTimerInitialDelay);
        }
***** FLEX6300FILTERS FROM 3.1.12.8.CS
            // Start looking for a cursor position change.
            panTimer = new System.Threading.Timer(panTimerHandler, null, panTimerInitialDelay, panTimerInterval);
        }
*****

